{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-30T15:54:24.051Z",
    "end": "2025-10-30T15:54:43.773Z",
    "duration": 19722,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "18017cd7-ee43-4a73-b6af-00eb3f1c6d28",
      "title": "",
      "fullFile": "/Users/putristphn/Documents/qa-engineer/digital-skola/webUIAutomationAdvanced/tests/sesi11_putristphn/sorting.pom.test.js",
      "file": "/tests/sesi11_putristphn/sorting.pom.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dffa0bee-9341-4819-b617-fa60d6341d6d",
          "title": "Product Sorting functionality using Page Object Model (POM)",
          "fullFile": "/Users/putristphn/Documents/qa-engineer/digital-skola/webUIAutomationAdvanced/tests/sesi11_putristphn/sorting.pom.test.js",
          "file": "/tests/sesi11_putristphn/sorting.pom.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Product Sorting functionality using Page Object Model (POM)\"",
              "fullTitle": "Product Sorting functionality using Page Object Model (POM) \"before all\" hook in \"Product Sorting functionality using Page Object Model (POM)\"",
              "timedOut": false,
              "duration": 1432,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await buildDriver();\nlogin = new LoginPage(driver);\ninventory = new InventoryPage(driver);\nawait login.open();\nawait login.login('standard_user', 'secret_sauce');\nawait inventory.assertOnPage();",
              "err": {},
              "uuid": "ba4e0dca-8c52-46d6-9a58-5f0339214c78",
              "parentUUID": "dffa0bee-9341-4819-b617-fa60d6341d6d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Product Sorting functionality using Page Object Model (POM)\"",
              "fullTitle": "Product Sorting functionality using Page Object Model (POM) \"after all\" hook in \"Product Sorting functionality using Page Object Model (POM)\"",
              "timedOut": false,
              "duration": 54,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) await driver.quit();",
              "err": {},
              "uuid": "9df00871-23d7-43b1-bf18-fc2cd4144634",
              "parentUUID": "dffa0bee-9341-4819-b617-fa60d6341d6d",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Product Sorting functionality using Page Object Model (POM)\"",
              "fullTitle": "Product Sorting functionality using Page Object Model (POM) \"after each\" hook in \"Product Sorting functionality using Page Object Model (POM)\"",
              "timedOut": false,
              "duration": 2001,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(2000);",
              "err": {},
              "uuid": "0acfe6ae-6fdc-426f-b7f3-4f21158f4819",
              "parentUUID": "dffa0bee-9341-4819-b617-fa60d6341d6d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Products successfully sorted by Name A→Z",
              "fullTitle": "Product Sorting functionality using Page Object Model (POM) Products successfully sorted by Name A→Z",
              "timedOut": false,
              "duration": 52,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await inventory.sortByValue('az');\nconst first = await inventory.firstName();\nassert.strictEqual(first, 'Sauce Labs Backpack', '\"Sauce Labs Backpack\" should be the first item name when sorted A→Z');",
              "err": {},
              "uuid": "2015e8d9-9bc6-4a7a-9dc4-40cc872e379e",
              "parentUUID": "dffa0bee-9341-4819-b617-fa60d6341d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Products successfully sorted by Name Z→A",
              "fullTitle": "Product Sorting functionality using Page Object Model (POM) Products successfully sorted by Name Z→A",
              "timedOut": false,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await inventory.sortByValue('za');\nconst first = await inventory.firstName();\nassert.strictEqual(first, 'Test.allTheThings() T-Shirt (Red)', '\"Test.allTheThings() T-Shirt (Red)\" should be the first item name when sorted Z→A');",
              "err": {},
              "uuid": "3b3ed425-a77a-4775-9fd5-0d12c6d545d9",
              "parentUUID": "dffa0bee-9341-4819-b617-fa60d6341d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Products successfully sorted by Price low→high",
              "fullTitle": "Product Sorting functionality using Page Object Model (POM) Products successfully sorted by Price low→high",
              "timedOut": false,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await inventory.sortByValue('lohi');\nconst price = (await inventory.firstPriceText()).trim();\nassert.strictEqual(price, '$7.99', '$7.99 should be the first item price when sorted Price low→high');",
              "err": {},
              "uuid": "1110805d-8d40-41fc-88f8-f50e32cf3dbb",
              "parentUUID": "dffa0bee-9341-4819-b617-fa60d6341d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Products successfully sorted by Price high→low",
              "fullTitle": "Product Sorting functionality using Page Object Model (POM) Products successfully sorted by Price high→low",
              "timedOut": false,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await inventory.sortByValue('hilo');\nconst price = (await inventory.firstPriceText()).trim();\nassert.strictEqual(price, '$49.99', '$49.99 should be the first item price when sorted Price high→low');",
              "err": {},
              "uuid": "91383d15-51cd-48d8-b1f1-9787de0926ca",
              "parentUUID": "dffa0bee-9341-4819-b617-fa60d6341d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Visual test - Compare sorting A to Z layout",
              "fullTitle": "Product Sorting functionality using Page Object Model (POM) Visual test - Compare sorting A to Z layout",
              "timedOut": false,
              "duration": 481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await inventory.sortByValue('az');\n\nconst baselinePath = 'sorting-az-baseline.png';\nif (!fs.existsSync(baselinePath)) {\n  await takeScreenshot(baselinePath);\n  console.log('A→Z sorting baseline screenshot created');\n  return;\n}\nconst currentPath = 'sorting-az-current.png';\nawait takeScreenshot(currentPath);\n\nconst diffPath = 'sorting-az-diff.png';\nconst diffPixels = compareScreenshots(baselinePath, currentPath, diffPath);\nassert.ok(diffPixels < 100, `Visual difference in A→Z sorting is too high: ${diffPixels} pixels`);",
              "err": {},
              "uuid": "c1dd4ba5-8807-4d94-b9cf-295b234085aa",
              "parentUUID": "dffa0bee-9341-4819-b617-fa60d6341d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Visual test - Compare sorting Z to A layout",
              "fullTitle": "Product Sorting functionality using Page Object Model (POM) Visual test - Compare sorting Z to A layout",
              "timedOut": false,
              "duration": 463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await inventory.sortByValue('za');\n\nconst baselinePath = 'sorting-za-baseline.png';\nif (!fs.existsSync(baselinePath)) {\n  await takeScreenshot(baselinePath);\n  console.log('Z→A sorting baseline screenshot created');\n  return;\n}\nconst currentPath = 'sorting-za-current.png';\nawait takeScreenshot(currentPath);\n\nconst diffPath = 'sorting-za-diff.png';\nconst diffPixels = compareScreenshots(baselinePath, currentPath, diffPath);\nassert.ok(diffPixels < 100, `Visual difference in Z→A sorting is too high: ${diffPixels} pixels`);",
              "err": {},
              "uuid": "a19e6ece-fb2f-4480-8600-95f4614e443c",
              "parentUUID": "dffa0bee-9341-4819-b617-fa60d6341d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Visual test - Compare sorting price low to high layout",
              "fullTitle": "Product Sorting functionality using Page Object Model (POM) Visual test - Compare sorting price low to high layout",
              "timedOut": false,
              "duration": 460,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await inventory.sortByValue('lohi');\n\nconst baselinePath = 'sorting-lohi-baseline.png';\nif (!fs.existsSync(baselinePath)) {\n  await takeScreenshot(baselinePath);\n  console.log('Price low→high sorting baseline screenshot created');\n  return;\n}\nconst currentPath = 'sorting-lohi-current.png';\nawait takeScreenshot(currentPath);\n\nconst diffPath = 'sorting-lohi-diff.png';\nconst diffPixels = compareScreenshots(baselinePath, currentPath, diffPath);\nassert.ok(diffPixels < 100, `Visual difference in price low→high sorting is too high: ${diffPixels} pixels`);",
              "err": {},
              "uuid": "de48960d-08bf-414e-9190-f1bc629bd325",
              "parentUUID": "dffa0bee-9341-4819-b617-fa60d6341d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Visual test - Compare sorting price high to low layout",
              "fullTitle": "Product Sorting functionality using Page Object Model (POM) Visual test - Compare sorting price high to low layout",
              "timedOut": false,
              "duration": 487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await inventory.sortByValue('hilo');\n\nconst baselinePath = 'sorting-hilo-baseline.png';\nif (!fs.existsSync(baselinePath)) {\n  await takeScreenshot(baselinePath);\n  console.log('Price high→low sorting baseline screenshot created');\n  return;\n}\nconst currentPath = 'sorting-hilo-current.png';\nawait takeScreenshot(currentPath);\n\nconst diffPath = 'sorting-hilo-diff.png';\nconst diffPixels = compareScreenshots(baselinePath, currentPath, diffPath);\nassert.ok(diffPixels < 100, `Visual difference in price high→low sorting is too high: ${diffPixels} pixels`);",
              "err": {},
              "uuid": "2548ff84-78ad-41cc-b063-8f3500b4a9f9",
              "parentUUID": "dffa0bee-9341-4819-b617-fa60d6341d6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2015e8d9-9bc6-4a7a-9dc4-40cc872e379e",
            "3b3ed425-a77a-4775-9fd5-0d12c6d545d9",
            "1110805d-8d40-41fc-88f8-f50e32cf3dbb",
            "91383d15-51cd-48d8-b1f1-9787de0926ca",
            "c1dd4ba5-8807-4d94-b9cf-295b234085aa",
            "a19e6ece-fb2f-4480-8600-95f4614e443c",
            "de48960d-08bf-414e-9190-f1bc629bd325",
            "2548ff84-78ad-41cc-b063-8f3500b4a9f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2218,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": null,
      "version": "6.3.0"
    }
  }
}